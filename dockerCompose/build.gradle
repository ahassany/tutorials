plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    // Dependency on docker compose plugin
    id 'com.avast.gradle.docker-compose' version "0.14.2"
}

group = 'ps.hassany.tutorial'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    integrationTestImplementation.extendsFrom implementation
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}


sourceSets {
    integrationTest {
        java {
            srcDir "src/integration/java"
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        resources.srcDir file("src/integration/resources")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}


task integrationTest(type: Test) {
    group 'Test'
    useJUnitPlatform()
    mustRunAfter test
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

check.dependsOn integrationTest

// Define the docker compose file
dockerCompose {
    dev {
        // Specify that bootRun depends on dockerCompose
        useComposeFiles = ["${buildDir}/resources/main/docker-compose.yml"]
        isRequiredBy(bootRun)
    }
    integration {
        // Define the docker compose file for integration testing
        useComposeFiles = ["${buildDir}/resources/integrationTest/docker-compose.yml"]
        isRequiredBy(integrationTest)
    }
}

